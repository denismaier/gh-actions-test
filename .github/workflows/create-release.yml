name: Create Release

on:
  push:
    branches:
      - main

    paths:
      - 'src/manifest.json'

  workflow_dispatch: # allows to manually trigger the workflow_dispatch

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:    
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Install dependencies
        run: |
          sudo apt install jq
      
      - name: Set up Git user
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
      
      - name: Load .env file
        run: |
          set -o allexport
          source .env
          set +o allexport

      - name: Extract version number
        id: extract_version
        run: echo "VERSION=$(jq -r '.version' src/manifest.json)" >> $GITHUB_ENV 

      - name: Build release
        run: |
          echo "Building release ${BUILD_BASENAME}-$VERSION"
          scripts/build.sh ${BUILD_BASENAME} $VERSION
          echo "Built release ${BUILD_BASENAME}-$VERSION"

      - name: Get release notes
        run: |
          echo "Extract release notes from CHANGELOG.md"
          echo "## Changes" >> release-notes-${VERSION}.md
          sed -n "/## v${VERSION}/,/^## /p" CHANGELOG.md | sed '1d;$d' >> release-notes-${VERSION}.md
          echo "Extracted release notes from CHANGELOG.md"
      
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating release $VERSION"
          gh release create v${VERSION} ${BUILD_DIR}/${BUILD_BASENAME}-${VERSION}.xpi -t "v${VERSION}" --notes-file release-notes-${VERSION}.md
          echo "Created release $VERSION"
    
      - name: Cleanup
        run: | 
          rm release-notes-${VERSION}.md
          rm -rf ${BUILD_DIR}
